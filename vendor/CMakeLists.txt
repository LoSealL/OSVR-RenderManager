if(NOT (EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/vrpn/vrpn_Connection.h"))
	message(FATAL_ERROR "You are missing the VRPN git submodule. You can get it now by running git submodule init vendor/vrpn; git submodule update from the root source directory.")
endif()

set(BUILD_SHARED_LIBS OFF)

# Build VRPN as subproject
set(VRPN_GPL_SERVER FALSE CACHE BOOL "" FORCE)
set(VRPN_BUILD_SERVER_LIBRARY FALSE CACHE BOOL "" FORCE)
set(VRPN_BUILD_CLIENT_LIBRARY TRUE CACHE BOOL "" FORCE)
set(VRPN_USE_LOCAL_HIDAPI FALSE CACHE BOOL "" FORCE)
set(VRPN_USE_LOCAL_JSONCPP FALSE CACHE BOOL "" FORCE)
add_subdirectory(vrpn)

# Create an interface target to more easily consume VRPN internally.
add_library(vendored-vrpn INTERFACE)
target_link_libraries(vendored-vrpn INTERFACE ${VRPN_CLIENT_LIBRARY})
target_include_directories(vendored-vrpn INTERFACE ${VRPN_INCLUDE_DIRS})
target_compile_definitions(vendored-vrpn INTERFACE ${VRPN_DEFINITIONS})

# Create an interface target to more easily consume quatlib internally.
add_library(vendored-quat INTERFACE)
target_link_libraries(vendored-quat INTERFACE quat)
target_include_directories(vendored-quat INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}/vrpn/quat")

if(WIN32 AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/UIforETW/include/ETWProviders/etwprof.h")
    option(BUILD_WITH_ETW_TRACING "Should RenderManager be built with additional ETW tracing events beyond those provided by OSVR-Core?" OFF)
    set(OSVRRM_ETW_FOUND ON CACHE INTERNAL "" FORCE)
else()
    set(OSVRRM_ETW_FOUND OFF CACHE INTERNAL "" FORCE)
    if(WIN32)
        message(STATUS "Win32, but vendor/UIforETW submodule not populated, so optional ETW tracing abilities not available.")
    endif()
endif()

if(OSVRRM_ETW_FOUND AND BUILD_WITH_ETW_TRACING)
    set(ETWROOT "${CMAKE_CURRENT_SOURCE_DIR}/UIforETW")
    set(ETWSUFFIX)
    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
        set(ETWSUFFIX 64)
    endif()
    set(ETWPROVIDERS_RUNTIME_LIBRARY "${ETWROOT}/bin/ETWProviders${ETWSUFFIX}.dll")
    set(ETWPROVIDERS_INCLUDE_DIR "${ETWROOT}/include" CACHE INTERNAL "" FORCE)
    add_library(OSVRRM-ETWProviders INTERFACE)
    target_include_directories(OSVRRM-ETWProviders INTERFACE "${ETWPROVIDERS_INCLUDE_DIR}")
    # if(NOT MSVC)
    #     target_include_directories(OSVRRM-ETWProviders INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}/dummy-sal")
    # endif()
    if(MINGW)
        target_link_libraries(OSVRRM-ETWProviders INTERFACE "${ETWPROVIDERS_RUNTIME_LIBRARY}")
    else()
        target_link_libraries(OSVRRM-ETWProviders INTERFACE "${ETWROOT}/lib/ETWProviders${ETWSUFFIX}.lib")
    endif()
    set(ETWPROVIDERS_RUNTIME_LIBRARY "${ETWPROVIDERS_RUNTIME_LIBRARY}" CACHE INTERNAL "" FORCE)
    set(ETWPROVIDERS_MANIFEST "${ETWROOT}/bin/ETWProviders.man" CACHE INTERNAL "" FORCE)
endif()
